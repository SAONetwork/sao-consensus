// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sao/did/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgAddBinding struct {
	Creator   string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AccountId string        `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Proof     *BindingProof `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (m *MsgAddBinding) Reset()         { *m = MsgAddBinding{} }
func (m *MsgAddBinding) String() string { return proto.CompactTextString(m) }
func (*MsgAddBinding) ProtoMessage()    {}
func (*MsgAddBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{0}
}
func (m *MsgAddBinding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddBinding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddBinding.Merge(m, src)
}
func (m *MsgAddBinding) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddBinding.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddBinding proto.InternalMessageInfo

func (m *MsgAddBinding) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddBinding) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *MsgAddBinding) GetProof() *BindingProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type MsgAddBindingResponse struct {
}

func (m *MsgAddBindingResponse) Reset()         { *m = MsgAddBindingResponse{} }
func (m *MsgAddBindingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddBindingResponse) ProtoMessage()    {}
func (*MsgAddBindingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{1}
}
func (m *MsgAddBindingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddBindingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddBindingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddBindingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddBindingResponse.Merge(m, src)
}
func (m *MsgAddBindingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddBindingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddBindingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddBindingResponse proto.InternalMessageInfo

type MsgUnbinding struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (m *MsgUnbinding) Reset()         { *m = MsgUnbinding{} }
func (m *MsgUnbinding) String() string { return proto.CompactTextString(m) }
func (*MsgUnbinding) ProtoMessage()    {}
func (*MsgUnbinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{2}
}
func (m *MsgUnbinding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnbinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnbinding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnbinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnbinding.Merge(m, src)
}
func (m *MsgUnbinding) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnbinding) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnbinding.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnbinding proto.InternalMessageInfo

func (m *MsgUnbinding) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUnbinding) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type MsgUnbindingResponse struct {
}

func (m *MsgUnbindingResponse) Reset()         { *m = MsgUnbindingResponse{} }
func (m *MsgUnbindingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnbindingResponse) ProtoMessage()    {}
func (*MsgUnbindingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{3}
}
func (m *MsgUnbindingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnbindingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnbindingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnbindingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnbindingResponse.Merge(m, src)
}
func (m *MsgUnbindingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnbindingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnbindingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnbindingResponse proto.InternalMessageInfo

type MsgAddAccountAuth struct {
	Creator     string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did         string       `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	AccountAuth *AccountAuth `protobuf:"bytes,3,opt,name=accountAuth,proto3" json:"accountAuth,omitempty"`
}

func (m *MsgAddAccountAuth) Reset()         { *m = MsgAddAccountAuth{} }
func (m *MsgAddAccountAuth) String() string { return proto.CompactTextString(m) }
func (*MsgAddAccountAuth) ProtoMessage()    {}
func (*MsgAddAccountAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{4}
}
func (m *MsgAddAccountAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAccountAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAccountAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAccountAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAccountAuth.Merge(m, src)
}
func (m *MsgAddAccountAuth) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAccountAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAccountAuth.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAccountAuth proto.InternalMessageInfo

func (m *MsgAddAccountAuth) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddAccountAuth) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgAddAccountAuth) GetAccountAuth() *AccountAuth {
	if m != nil {
		return m.AccountAuth
	}
	return nil
}

type MsgAddAccountAuthResponse struct {
}

func (m *MsgAddAccountAuthResponse) Reset()         { *m = MsgAddAccountAuthResponse{} }
func (m *MsgAddAccountAuthResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAccountAuthResponse) ProtoMessage()    {}
func (*MsgAddAccountAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{5}
}
func (m *MsgAddAccountAuthResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAccountAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAccountAuthResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAccountAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAccountAuthResponse.Merge(m, src)
}
func (m *MsgAddAccountAuthResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAccountAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAccountAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAccountAuthResponse proto.InternalMessageInfo

type MsgUpdateAccountAuths struct {
	Creator string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string         `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Update  []*AccountAuth `protobuf:"bytes,3,rep,name=update,proto3" json:"update,omitempty"`
	Remove  []string       `protobuf:"bytes,4,rep,name=remove,proto3" json:"remove,omitempty"`
}

func (m *MsgUpdateAccountAuths) Reset()         { *m = MsgUpdateAccountAuths{} }
func (m *MsgUpdateAccountAuths) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAccountAuths) ProtoMessage()    {}
func (*MsgUpdateAccountAuths) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{6}
}
func (m *MsgUpdateAccountAuths) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAccountAuths) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAccountAuths.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAccountAuths) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAccountAuths.Merge(m, src)
}
func (m *MsgUpdateAccountAuths) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAccountAuths) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAccountAuths.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAccountAuths proto.InternalMessageInfo

func (m *MsgUpdateAccountAuths) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAccountAuths) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateAccountAuths) GetUpdate() []*AccountAuth {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *MsgUpdateAccountAuths) GetRemove() []string {
	if m != nil {
		return m.Remove
	}
	return nil
}

type MsgUpdateAccountAuthsResponse struct {
}

func (m *MsgUpdateAccountAuthsResponse) Reset()         { *m = MsgUpdateAccountAuthsResponse{} }
func (m *MsgUpdateAccountAuthsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAccountAuthsResponse) ProtoMessage()    {}
func (*MsgUpdateAccountAuthsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{7}
}
func (m *MsgUpdateAccountAuthsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAccountAuthsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAccountAuthsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAccountAuthsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAccountAuthsResponse.Merge(m, src)
}
func (m *MsgUpdateAccountAuthsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAccountAuthsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAccountAuthsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAccountAuthsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAddBinding)(nil), "saonetwork.sao.did.MsgAddBinding")
	proto.RegisterType((*MsgAddBindingResponse)(nil), "saonetwork.sao.did.MsgAddBindingResponse")
	proto.RegisterType((*MsgUnbinding)(nil), "saonetwork.sao.did.MsgUnbinding")
	proto.RegisterType((*MsgUnbindingResponse)(nil), "saonetwork.sao.did.MsgUnbindingResponse")
	proto.RegisterType((*MsgAddAccountAuth)(nil), "saonetwork.sao.did.MsgAddAccountAuth")
	proto.RegisterType((*MsgAddAccountAuthResponse)(nil), "saonetwork.sao.did.MsgAddAccountAuthResponse")
	proto.RegisterType((*MsgUpdateAccountAuths)(nil), "saonetwork.sao.did.MsgUpdateAccountAuths")
	proto.RegisterType((*MsgUpdateAccountAuthsResponse)(nil), "saonetwork.sao.did.MsgUpdateAccountAuthsResponse")
}

func init() { proto.RegisterFile("sao/did/tx.proto", fileDescriptor_cfd73c0d291cdace) }

var fileDescriptor_cfd73c0d291cdace = []byte{
	// 459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x41, 0x6b, 0xd4, 0x40,
	0x14, 0xc7, 0x77, 0x8c, 0xae, 0xe4, 0x55, 0xa5, 0x0e, 0xb6, 0xc6, 0x54, 0xd3, 0x18, 0x28, 0xc4,
	0x83, 0x09, 0x56, 0xd0, 0xa3, 0xa4, 0x07, 0xc1, 0xc3, 0x8a, 0x44, 0x8a, 0xd0, 0x4b, 0x99, 0x64,
	0xa6, 0xd9, 0x20, 0xcd, 0x84, 0xcc, 0x44, 0xeb, 0x49, 0xf0, 0x13, 0x78, 0x10, 0x3f, 0x93, 0xc7,
	0x1e, 0x3d, 0xca, 0xee, 0x17, 0x91, 0xcd, 0x24, 0xd9, 0xb4, 0x9b, 0x75, 0x57, 0x7a, 0x4b, 0xe6,
	0xfd, 0xe6, 0xff, 0xff, 0xcf, 0xcc, 0xe3, 0xc1, 0xa6, 0x20, 0xdc, 0xa7, 0x29, 0xf5, 0xe5, 0x99,
	0x97, 0x17, 0x5c, 0x72, 0x8c, 0x05, 0xe1, 0x19, 0x93, 0x9f, 0x79, 0xf1, 0xd1, 0x13, 0x84, 0x7b,
	0x34, 0xa5, 0xa6, 0xd9, 0x50, 0x24, 0x8e, 0x79, 0x99, 0xc9, 0x63, 0x52, 0xca, 0xb1, 0xe2, 0xcd,
	0xad, 0xa6, 0x16, 0xa5, 0x19, 0x4d, 0xb3, 0xa4, 0x5e, 0xde, 0xb9, 0xb4, 0x7c, 0x9c, 0x17, 0x9c,
	0x9f, 0xa8, 0xa2, 0xf3, 0x15, 0x6e, 0x8f, 0x44, 0x12, 0x50, 0x7a, 0xa0, 0x8a, 0xd8, 0x80, 0x9b,
	0x71, 0xc1, 0x88, 0xe4, 0x85, 0x81, 0x6c, 0xe4, 0xea, 0x61, 0xf3, 0x8b, 0x1f, 0x82, 0x5e, 0x9b,
	0xbe, 0xa1, 0xc6, 0xb5, 0xaa, 0x36, 0x5f, 0xc0, 0x2f, 0xe0, 0x46, 0xa5, 0x6b, 0x68, 0x36, 0x72,
	0x37, 0xf6, 0x6d, 0x6f, 0x31, 0xbc, 0x57, 0x7b, 0xbc, 0x9b, 0x71, 0xa1, 0xc2, 0x9d, 0xfb, 0xb0,
	0x75, 0x21, 0x40, 0xc8, 0x44, 0xce, 0x33, 0xc1, 0x9c, 0xd7, 0x70, 0x6b, 0x24, 0x92, 0xc3, 0x2c,
	0xba, 0x5a, 0x30, 0x67, 0x1b, 0xee, 0x75, 0x75, 0x5a, 0xfd, 0x6f, 0x08, 0xee, 0x2a, 0xe7, 0x40,
	0xb1, 0x41, 0x29, 0xc7, 0xff, 0x70, 0xd9, 0x04, 0x8d, 0xa6, 0x8d, 0xfe, 0xec, 0x13, 0x07, 0xb0,
	0x41, 0xe6, 0x5b, 0xeb, 0x83, 0xef, 0xf6, 0x1d, 0xbc, 0xe3, 0x10, 0x76, 0xf7, 0x38, 0x3b, 0xf0,
	0x60, 0x21, 0x43, 0x9b, 0xf0, 0x07, 0xaa, 0xee, 0xe6, 0x30, 0xa7, 0x44, 0xb2, 0x0e, 0x20, 0xfe,
	0x2b, 0xe5, 0x4b, 0x18, 0x96, 0x95, 0x82, 0xa1, 0xd9, 0xda, 0x3a, 0x01, 0x6b, 0x1c, 0x6f, 0xc3,
	0xb0, 0x60, 0xa7, 0xfc, 0x13, 0x33, 0xae, 0xdb, 0x9a, 0xab, 0x87, 0xf5, 0x9f, 0xb3, 0x0b, 0x8f,
	0x7a, 0x53, 0x35, 0xb9, 0xf7, 0x7f, 0x6a, 0xa0, 0x8d, 0x44, 0x82, 0x8f, 0x00, 0x3a, 0x8d, 0xf5,
	0xb8, 0xcf, 0xf7, 0xc2, 0xd3, 0x9b, 0x4f, 0x56, 0x22, 0x8d, 0x07, 0xfe, 0x00, 0xfa, 0xbc, 0x35,
	0xec, 0x25, 0xfb, 0x5a, 0xc2, 0x74, 0x57, 0x11, 0xad, 0xf0, 0x09, 0xdc, 0xb9, 0xd4, 0x12, 0x7b,
	0xcb, 0x53, 0x75, 0x30, 0xf3, 0xe9, 0x5a, 0x58, 0xeb, 0x53, 0x00, 0xee, 0x79, 0xd8, 0x65, 0x37,
	0xb0, 0x88, 0x9a, 0xcf, 0xd6, 0x46, 0x1b, 0xcf, 0x83, 0x57, 0xbf, 0x26, 0x16, 0x3a, 0x9f, 0x58,
	0xe8, 0xcf, 0xc4, 0x42, 0xdf, 0xa7, 0xd6, 0xe0, 0x7c, 0x6a, 0x0d, 0x7e, 0x4f, 0xad, 0xc1, 0xd1,
	0x5e, 0x92, 0xca, 0x71, 0x19, 0x79, 0x31, 0x3f, 0xf5, 0xdf, 0x13, 0xfe, 0x56, 0xc9, 0xfa, 0xb3,
	0xc9, 0x71, 0xa6, 0x86, 0xd2, 0x97, 0x9c, 0x89, 0x68, 0x58, 0x0d, 0x8d, 0xe7, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x2e, 0x48, 0xb9, 0x5a, 0xac, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	AddBinding(ctx context.Context, in *MsgAddBinding, opts ...grpc.CallOption) (*MsgAddBindingResponse, error)
	Unbinding(ctx context.Context, in *MsgUnbinding, opts ...grpc.CallOption) (*MsgUnbindingResponse, error)
	AddAccountAuth(ctx context.Context, in *MsgAddAccountAuth, opts ...grpc.CallOption) (*MsgAddAccountAuthResponse, error)
	UpdateAccountAuths(ctx context.Context, in *MsgUpdateAccountAuths, opts ...grpc.CallOption) (*MsgUpdateAccountAuthsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AddBinding(ctx context.Context, in *MsgAddBinding, opts ...grpc.CallOption) (*MsgAddBindingResponse, error) {
	out := new(MsgAddBindingResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/AddBinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Unbinding(ctx context.Context, in *MsgUnbinding, opts ...grpc.CallOption) (*MsgUnbindingResponse, error) {
	out := new(MsgUnbindingResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/Unbinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddAccountAuth(ctx context.Context, in *MsgAddAccountAuth, opts ...grpc.CallOption) (*MsgAddAccountAuthResponse, error) {
	out := new(MsgAddAccountAuthResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/AddAccountAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAccountAuths(ctx context.Context, in *MsgUpdateAccountAuths, opts ...grpc.CallOption) (*MsgUpdateAccountAuthsResponse, error) {
	out := new(MsgUpdateAccountAuthsResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/UpdateAccountAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	AddBinding(context.Context, *MsgAddBinding) (*MsgAddBindingResponse, error)
	Unbinding(context.Context, *MsgUnbinding) (*MsgUnbindingResponse, error)
	AddAccountAuth(context.Context, *MsgAddAccountAuth) (*MsgAddAccountAuthResponse, error)
	UpdateAccountAuths(context.Context, *MsgUpdateAccountAuths) (*MsgUpdateAccountAuthsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AddBinding(ctx context.Context, req *MsgAddBinding) (*MsgAddBindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBinding not implemented")
}
func (*UnimplementedMsgServer) Unbinding(ctx context.Context, req *MsgUnbinding) (*MsgUnbindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unbinding not implemented")
}
func (*UnimplementedMsgServer) AddAccountAuth(ctx context.Context, req *MsgAddAccountAuth) (*MsgAddAccountAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAccountAuth not implemented")
}
func (*UnimplementedMsgServer) UpdateAccountAuths(ctx context.Context, req *MsgUpdateAccountAuths) (*MsgUpdateAccountAuthsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccountAuths not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AddBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddBinding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/AddBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddBinding(ctx, req.(*MsgAddBinding))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Unbinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnbinding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Unbinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/Unbinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Unbinding(ctx, req.(*MsgUnbinding))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddAccountAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAccountAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAccountAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/AddAccountAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAccountAuth(ctx, req.(*MsgAddAccountAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAccountAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAccountAuths)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAccountAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/UpdateAccountAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAccountAuths(ctx, req.(*MsgUpdateAccountAuths))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "saonetwork.sao.did.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBinding",
			Handler:    _Msg_AddBinding_Handler,
		},
		{
			MethodName: "Unbinding",
			Handler:    _Msg_Unbinding_Handler,
		},
		{
			MethodName: "AddAccountAuth",
			Handler:    _Msg_AddAccountAuth_Handler,
		},
		{
			MethodName: "UpdateAccountAuths",
			Handler:    _Msg_UpdateAccountAuths_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sao/did/tx.proto",
}

func (m *MsgAddBinding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddBinding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddBinding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Proof != nil {
		{
			size, err := m.Proof.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddBindingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddBindingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddBindingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnbinding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnbinding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnbinding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnbindingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnbindingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnbindingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddAccountAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAccountAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAccountAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AccountAuth != nil {
		{
			size, err := m.AccountAuth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAccountAuthResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAccountAuthResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAccountAuthResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAccountAuths) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAccountAuths) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAccountAuths) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Remove) > 0 {
		for iNdEx := len(m.Remove) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Remove[iNdEx])
			copy(dAtA[i:], m.Remove[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Remove[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Update) > 0 {
		for iNdEx := len(m.Update) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Update[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAccountAuthsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAccountAuthsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAccountAuthsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAddBinding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Proof != nil {
		l = m.Proof.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddBindingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnbinding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnbindingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddAccountAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AccountAuth != nil {
		l = m.AccountAuth.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddAccountAuthResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateAccountAuths) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Update) > 0 {
		for _, e := range m.Update {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Remove) > 0 {
		for _, s := range m.Remove {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateAccountAuthsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAddBinding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddBinding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddBinding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proof == nil {
				m.Proof = &BindingProof{}
			}
			if err := m.Proof.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddBindingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddBindingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddBindingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnbinding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnbinding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnbinding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnbindingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnbindingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnbindingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAccountAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAccountAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAccountAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountAuth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AccountAuth == nil {
				m.AccountAuth = &AccountAuth{}
			}
			if err := m.AccountAuth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAccountAuthResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAccountAuthResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAccountAuthResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAccountAuths) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAccountAuths: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAccountAuths: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Update", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Update = append(m.Update, &AccountAuth{})
			if err := m.Update[len(m.Update)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Remove = append(m.Remove, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAccountAuthsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAccountAuthsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAccountAuthsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
