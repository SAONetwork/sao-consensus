// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sao/did/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgResetStore struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgResetStore) Reset()         { *m = MsgResetStore{} }
func (m *MsgResetStore) String() string { return proto.CompactTextString(m) }
func (*MsgResetStore) ProtoMessage()    {}
func (*MsgResetStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{0}
}
func (m *MsgResetStore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetStore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetStore.Merge(m, src)
}
func (m *MsgResetStore) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetStore) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetStore.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetStore proto.InternalMessageInfo

func (m *MsgResetStore) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgResetStoreResponse struct {
}

func (m *MsgResetStoreResponse) Reset()         { *m = MsgResetStoreResponse{} }
func (m *MsgResetStoreResponse) String() string { return proto.CompactTextString(m) }
func (*MsgResetStoreResponse) ProtoMessage()    {}
func (*MsgResetStoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{1}
}
func (m *MsgResetStoreResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetStoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetStoreResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetStoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetStoreResponse.Merge(m, src)
}
func (m *MsgResetStoreResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetStoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetStoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetStoreResponse proto.InternalMessageInfo

type MsgUpdatePaymentAddress struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Did       string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgUpdatePaymentAddress) Reset()         { *m = MsgUpdatePaymentAddress{} }
func (m *MsgUpdatePaymentAddress) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePaymentAddress) ProtoMessage()    {}
func (*MsgUpdatePaymentAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{2}
}
func (m *MsgUpdatePaymentAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePaymentAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePaymentAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePaymentAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePaymentAddress.Merge(m, src)
}
func (m *MsgUpdatePaymentAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePaymentAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePaymentAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePaymentAddress proto.InternalMessageInfo

func (m *MsgUpdatePaymentAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePaymentAddress) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *MsgUpdatePaymentAddress) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgUpdatePaymentAddressResponse struct {
}

func (m *MsgUpdatePaymentAddressResponse) Reset()         { *m = MsgUpdatePaymentAddressResponse{} }
func (m *MsgUpdatePaymentAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePaymentAddressResponse) ProtoMessage()    {}
func (*MsgUpdatePaymentAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{3}
}
func (m *MsgUpdatePaymentAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePaymentAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePaymentAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePaymentAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePaymentAddressResponse.Merge(m, src)
}
func (m *MsgUpdatePaymentAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePaymentAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePaymentAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePaymentAddressResponse proto.InternalMessageInfo

type MsgBinding struct {
	Creator     string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AccountId   string        `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	RootDocId   string        `protobuf:"bytes,3,opt,name=rootDocId,proto3" json:"rootDocId,omitempty"`
	Keys        []*PubKey     `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	AccountAuth *AccountAuth  `protobuf:"bytes,5,opt,name=accountAuth,proto3" json:"accountAuth,omitempty"`
	Proof       *BindingProof `protobuf:"bytes,6,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (m *MsgBinding) Reset()         { *m = MsgBinding{} }
func (m *MsgBinding) String() string { return proto.CompactTextString(m) }
func (*MsgBinding) ProtoMessage()    {}
func (*MsgBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{4}
}
func (m *MsgBinding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBinding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBinding.Merge(m, src)
}
func (m *MsgBinding) XXX_Size() int {
	return m.Size()
}
func (m *MsgBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBinding.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBinding proto.InternalMessageInfo

func (m *MsgBinding) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBinding) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *MsgBinding) GetRootDocId() string {
	if m != nil {
		return m.RootDocId
	}
	return ""
}

func (m *MsgBinding) GetKeys() []*PubKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *MsgBinding) GetAccountAuth() *AccountAuth {
	if m != nil {
		return m.AccountAuth
	}
	return nil
}

func (m *MsgBinding) GetProof() *BindingProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type MsgBindingResponse struct {
}

func (m *MsgBindingResponse) Reset()         { *m = MsgBindingResponse{} }
func (m *MsgBindingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBindingResponse) ProtoMessage()    {}
func (*MsgBindingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{5}
}
func (m *MsgBindingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBindingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBindingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBindingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBindingResponse.Merge(m, src)
}
func (m *MsgBindingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBindingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBindingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBindingResponse proto.InternalMessageInfo

type MsgUpdate struct {
	Creator           string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did               string         `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	NewDocId          string         `protobuf:"bytes,3,opt,name=newDocId,proto3" json:"newDocId,omitempty"`
	Keys              []*PubKey      `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Timestamp         uint64         `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UpdateAccountAuth []*AccountAuth `protobuf:"bytes,6,rep,name=updateAccountAuth,proto3" json:"updateAccountAuth,omitempty"`
	RemoveAccountDid  []string       `protobuf:"bytes,7,rep,name=removeAccountDid,proto3" json:"removeAccountDid,omitempty"`
	PastSeed          string         `protobuf:"bytes,8,opt,name=pastSeed,proto3" json:"pastSeed,omitempty"`
}

func (m *MsgUpdate) Reset()         { *m = MsgUpdate{} }
func (m *MsgUpdate) String() string { return proto.CompactTextString(m) }
func (*MsgUpdate) ProtoMessage()    {}
func (*MsgUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{6}
}
func (m *MsgUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdate.Merge(m, src)
}
func (m *MsgUpdate) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdate proto.InternalMessageInfo

func (m *MsgUpdate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdate) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdate) GetNewDocId() string {
	if m != nil {
		return m.NewDocId
	}
	return ""
}

func (m *MsgUpdate) GetKeys() []*PubKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *MsgUpdate) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgUpdate) GetUpdateAccountAuth() []*AccountAuth {
	if m != nil {
		return m.UpdateAccountAuth
	}
	return nil
}

func (m *MsgUpdate) GetRemoveAccountDid() []string {
	if m != nil {
		return m.RemoveAccountDid
	}
	return nil
}

func (m *MsgUpdate) GetPastSeed() string {
	if m != nil {
		return m.PastSeed
	}
	return ""
}

type MsgUpdateResponse struct {
}

func (m *MsgUpdateResponse) Reset()         { *m = MsgUpdateResponse{} }
func (m *MsgUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateResponse) ProtoMessage()    {}
func (*MsgUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfd73c0d291cdace, []int{7}
}
func (m *MsgUpdateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateResponse.Merge(m, src)
}
func (m *MsgUpdateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgResetStore)(nil), "saonetwork.sao.did.MsgResetStore")
	proto.RegisterType((*MsgResetStoreResponse)(nil), "saonetwork.sao.did.MsgResetStoreResponse")
	proto.RegisterType((*MsgUpdatePaymentAddress)(nil), "saonetwork.sao.did.MsgUpdatePaymentAddress")
	proto.RegisterType((*MsgUpdatePaymentAddressResponse)(nil), "saonetwork.sao.did.MsgUpdatePaymentAddressResponse")
	proto.RegisterType((*MsgBinding)(nil), "saonetwork.sao.did.MsgBinding")
	proto.RegisterType((*MsgBindingResponse)(nil), "saonetwork.sao.did.MsgBindingResponse")
	proto.RegisterType((*MsgUpdate)(nil), "saonetwork.sao.did.MsgUpdate")
	proto.RegisterType((*MsgUpdateResponse)(nil), "saonetwork.sao.did.MsgUpdateResponse")
}

func init() { proto.RegisterFile("sao/did/tx.proto", fileDescriptor_cfd73c0d291cdace) }

var fileDescriptor_cfd73c0d291cdace = []byte{
	// 568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6a, 0xdb, 0x40,
	0x10, 0x8e, 0xec, 0xc4, 0x89, 0xc6, 0x14, 0x9c, 0x6d, 0x42, 0x16, 0xd5, 0x55, 0x1c, 0x41, 0x8a,
	0xd3, 0x82, 0x0c, 0x0e, 0xf4, 0x5a, 0x1c, 0x72, 0x09, 0xc5, 0xc1, 0x95, 0xe9, 0x25, 0x17, 0xb3,
	0xd6, 0x6e, 0x65, 0x61, 0xac, 0x15, 0xda, 0x55, 0x63, 0x3f, 0x44, 0xa1, 0x8f, 0xd3, 0x47, 0xe8,
	0x31, 0xc7, 0x1e, 0x8b, 0xfd, 0x1e, 0xa5, 0x58, 0xd2, 0xca, 0x4e, 0xfd, 0x13, 0xd2, 0x9b, 0x76,
	0xbe, 0x6f, 0xbe, 0x99, 0xfd, 0x46, 0xb3, 0x50, 0x11, 0x84, 0x37, 0xa8, 0x4f, 0x1b, 0x72, 0x6c,
	0x87, 0x11, 0x97, 0x1c, 0x21, 0x41, 0x78, 0xc0, 0xe4, 0x3d, 0x8f, 0x86, 0xb6, 0x20, 0xdc, 0xa6,
	0x3e, 0x35, 0xb0, 0x62, 0x11, 0xd7, 0xe5, 0x71, 0x20, 0x7b, 0x3e, 0x4d, 0xd9, 0xc6, 0x2b, 0x85,
	0xf4, 0xfd, 0x80, 0xfa, 0x81, 0xd7, 0x0b, 0x23, 0xce, 0xbf, 0x64, 0xa0, 0xf1, 0x6f, 0x1a, 0x89,
	0xe5, 0x20, 0xc3, 0x8e, 0x15, 0x16, 0xc6, 0xfd, 0xde, 0x90, 0x4d, 0xd2, 0xb0, 0x75, 0x01, 0x2f,
	0xda, 0xc2, 0x73, 0x98, 0x60, 0xb2, 0x2b, 0x79, 0xc4, 0x10, 0x86, 0x7d, 0x37, 0x62, 0x44, 0xf2,
	0x08, 0x6b, 0x35, 0xad, 0xae, 0x3b, 0xea, 0x68, 0x9d, 0xc0, 0xf1, 0x23, 0xaa, 0xc3, 0x44, 0xc8,
	0x03, 0xc1, 0x2c, 0x17, 0x4e, 0xda, 0xc2, 0xfb, 0x1c, 0x52, 0x22, 0x59, 0x87, 0x4c, 0x46, 0x2c,
	0x90, 0x2d, 0x4a, 0x23, 0x26, 0xc4, 0x66, 0x35, 0x54, 0x05, 0x3d, 0xeb, 0xf2, 0x86, 0xe2, 0x42,
	0x82, 0x2d, 0x02, 0xa8, 0x02, 0x45, 0xea, 0x53, 0x5c, 0x4c, 0xe2, 0xf3, 0x4f, 0xeb, 0x0c, 0x4e,
	0x37, 0x14, 0xc9, 0xfb, 0xf8, 0x56, 0x00, 0x68, 0x0b, 0xef, 0x2a, 0x75, 0xe6, 0xbf, 0x6b, 0x57,
	0x41, 0x8f, 0x38, 0x97, 0xd7, 0xdc, 0xbd, 0x51, 0x1d, 0x2c, 0x02, 0xc8, 0x86, 0xdd, 0x21, 0x9b,
	0x08, 0xbc, 0x5b, 0x2b, 0xd6, 0xcb, 0x4d, 0xc3, 0x5e, 0x9d, 0x9e, 0xdd, 0x89, 0xfb, 0x1f, 0xd9,
	0xc4, 0x49, 0x78, 0xa8, 0x05, 0xe5, 0x4c, 0xba, 0x15, 0xcb, 0x01, 0xde, 0xab, 0x69, 0xf5, 0x72,
	0xf3, 0x74, 0x5d, 0x5a, 0x6b, 0x41, 0x73, 0x96, 0x73, 0xd0, 0x7b, 0xd8, 0x4b, 0xa6, 0x8c, 0x4b,
	0x49, 0x72, 0x6d, 0x5d, 0x72, 0x76, 0xe9, 0xce, 0x9c, 0xe7, 0xa4, 0x74, 0xeb, 0x08, 0xd0, 0xc2,
	0x8e, 0xdc, 0xa5, 0x1f, 0x05, 0xd0, 0x73, 0x27, 0xb7, 0x98, 0x94, 0x8d, 0xa0, 0x90, 0x8f, 0x00,
	0x19, 0x70, 0x10, 0xb0, 0xfb, 0x65, 0x5f, 0xf2, 0xf3, 0xb3, 0x6d, 0xa9, 0x82, 0x2e, 0xfd, 0x11,
	0x13, 0x92, 0x8c, 0xc2, 0xc4, 0x94, 0x5d, 0x67, 0x11, 0x40, 0x6d, 0x38, 0x8c, 0x93, 0xfe, 0x96,
	0x3c, 0xc1, 0xa5, 0x44, 0xfa, 0x49, 0xeb, 0x56, 0x33, 0xd1, 0x5b, 0xa8, 0x44, 0x6c, 0xc4, 0xbf,
	0xaa, 0xe0, 0xb5, 0x4f, 0xf1, 0x7e, 0xad, 0x58, 0xd7, 0x9d, 0x95, 0xf8, 0xfc, 0x92, 0x21, 0x11,
	0xb2, 0xcb, 0x18, 0xc5, 0x07, 0xe9, 0x25, 0xd5, 0xd9, 0x7a, 0x09, 0x87, 0xb9, 0x73, 0xca, 0xcf,
	0xe6, 0x9f, 0x02, 0x14, 0xdb, 0xc2, 0x43, 0x77, 0x00, 0x4b, 0x6b, 0x74, 0xb6, 0xae, 0xcd, 0x47,
	0xeb, 0x63, 0x5c, 0x3c, 0x49, 0x51, 0x35, 0xd0, 0x18, 0x8e, 0xd6, 0xae, 0xd7, 0xbb, 0x0d, 0x12,
	0xeb, 0xc8, 0xc6, 0xe5, 0x33, 0xc8, 0x79, 0xe5, 0x4f, 0xb0, 0xaf, 0xf6, 0xc9, 0xdc, 0x90, 0x9f,
	0xe1, 0xc6, 0x9b, 0xed, 0x78, 0x2e, 0x79, 0x0b, 0xa5, 0xec, 0xe7, 0x7b, 0xbd, 0xb5, 0x23, 0xe3,
	0x7c, 0x2b, 0xac, 0xf4, 0xae, 0x3e, 0xfc, 0x9c, 0x9a, 0xda, 0xc3, 0xd4, 0xd4, 0x7e, 0x4f, 0x4d,
	0xed, 0xfb, 0xcc, 0xdc, 0x79, 0x98, 0x99, 0x3b, 0xbf, 0x66, 0xe6, 0xce, 0xdd, 0xb9, 0xe7, 0xcb,
	0x41, 0xdc, 0xb7, 0x5d, 0x3e, 0x6a, 0x74, 0x09, 0xbf, 0x4d, 0xa5, 0x1a, 0xf3, 0x97, 0x70, 0x9c,
	0x3e, 0xc2, 0x93, 0x90, 0x89, 0x7e, 0x29, 0x79, 0x0a, 0x2f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x47, 0xb1, 0xb5, 0xa3, 0x9c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	ResetStore(ctx context.Context, in *MsgResetStore, opts ...grpc.CallOption) (*MsgResetStoreResponse, error)
	UpdatePaymentAddress(ctx context.Context, in *MsgUpdatePaymentAddress, opts ...grpc.CallOption) (*MsgUpdatePaymentAddressResponse, error)
	Binding(ctx context.Context, in *MsgBinding, opts ...grpc.CallOption) (*MsgBindingResponse, error)
	Update(ctx context.Context, in *MsgUpdate, opts ...grpc.CallOption) (*MsgUpdateResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) ResetStore(ctx context.Context, in *MsgResetStore, opts ...grpc.CallOption) (*MsgResetStoreResponse, error) {
	out := new(MsgResetStoreResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/ResetStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePaymentAddress(ctx context.Context, in *MsgUpdatePaymentAddress, opts ...grpc.CallOption) (*MsgUpdatePaymentAddressResponse, error) {
	out := new(MsgUpdatePaymentAddressResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/UpdatePaymentAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Binding(ctx context.Context, in *MsgBinding, opts ...grpc.CallOption) (*MsgBindingResponse, error) {
	out := new(MsgBindingResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/Binding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Update(ctx context.Context, in *MsgUpdate, opts ...grpc.CallOption) (*MsgUpdateResponse, error) {
	out := new(MsgUpdateResponse)
	err := c.cc.Invoke(ctx, "/saonetwork.sao.did.Msg/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	ResetStore(context.Context, *MsgResetStore) (*MsgResetStoreResponse, error)
	UpdatePaymentAddress(context.Context, *MsgUpdatePaymentAddress) (*MsgUpdatePaymentAddressResponse, error)
	Binding(context.Context, *MsgBinding) (*MsgBindingResponse, error)
	Update(context.Context, *MsgUpdate) (*MsgUpdateResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) ResetStore(ctx context.Context, req *MsgResetStore) (*MsgResetStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetStore not implemented")
}
func (*UnimplementedMsgServer) UpdatePaymentAddress(ctx context.Context, req *MsgUpdatePaymentAddress) (*MsgUpdatePaymentAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePaymentAddress not implemented")
}
func (*UnimplementedMsgServer) Binding(ctx context.Context, req *MsgBinding) (*MsgBindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Binding not implemented")
}
func (*UnimplementedMsgServer) Update(ctx context.Context, req *MsgUpdate) (*MsgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_ResetStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgResetStore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ResetStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/ResetStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ResetStore(ctx, req.(*MsgResetStore))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePaymentAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePaymentAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePaymentAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/UpdatePaymentAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePaymentAddress(ctx, req.(*MsgUpdatePaymentAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Binding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBinding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Binding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/Binding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Binding(ctx, req.(*MsgBinding))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saonetwork.sao.did.Msg/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Update(ctx, req.(*MsgUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "saonetwork.sao.did.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ResetStore",
			Handler:    _Msg_ResetStore_Handler,
		},
		{
			MethodName: "UpdatePaymentAddress",
			Handler:    _Msg_UpdatePaymentAddress_Handler,
		},
		{
			MethodName: "Binding",
			Handler:    _Msg_Binding_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Msg_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sao/did/tx.proto",
}

func (m *MsgResetStore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetStore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetStore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgResetStoreResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetStoreResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetStoreResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePaymentAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePaymentAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePaymentAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePaymentAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePaymentAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePaymentAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBinding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBinding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBinding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Proof != nil {
		{
			size, err := m.Proof.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.AccountAuth != nil {
		{
			size, err := m.AccountAuth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Keys) > 0 {
		for iNdEx := len(m.Keys) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Keys[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.RootDocId) > 0 {
		i -= len(m.RootDocId)
		copy(dAtA[i:], m.RootDocId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RootDocId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBindingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBindingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBindingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PastSeed) > 0 {
		i -= len(m.PastSeed)
		copy(dAtA[i:], m.PastSeed)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PastSeed)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.RemoveAccountDid) > 0 {
		for iNdEx := len(m.RemoveAccountDid) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RemoveAccountDid[iNdEx])
			copy(dAtA[i:], m.RemoveAccountDid[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.RemoveAccountDid[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.UpdateAccountAuth) > 0 {
		for iNdEx := len(m.UpdateAccountAuth) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UpdateAccountAuth[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Keys) > 0 {
		for iNdEx := len(m.Keys) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Keys[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.NewDocId) > 0 {
		i -= len(m.NewDocId)
		copy(dAtA[i:], m.NewDocId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewDocId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgResetStore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgResetStoreResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePaymentAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePaymentAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBinding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RootDocId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, e := range m.Keys {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.AccountAuth != nil {
		l = m.AccountAuth.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Proof != nil {
		l = m.Proof.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBindingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewDocId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, e := range m.Keys {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	if len(m.UpdateAccountAuth) > 0 {
		for _, e := range m.UpdateAccountAuth {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveAccountDid) > 0 {
		for _, s := range m.RemoveAccountDid {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.PastSeed)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgResetStore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetStore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetStore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetStoreResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetStoreResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetStoreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePaymentAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePaymentAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePaymentAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePaymentAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePaymentAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePaymentAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBinding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBinding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBinding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootDocId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootDocId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, &PubKey{})
			if err := m.Keys[len(m.Keys)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountAuth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AccountAuth == nil {
				m.AccountAuth = &AccountAuth{}
			}
			if err := m.AccountAuth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proof == nil {
				m.Proof = &BindingProof{}
			}
			if err := m.Proof.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBindingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBindingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBindingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewDocId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewDocId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, &PubKey{})
			if err := m.Keys[len(m.Keys)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAccountAuth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateAccountAuth = append(m.UpdateAccountAuth, &AccountAuth{})
			if err := m.UpdateAccountAuth[len(m.UpdateAccountAuth)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveAccountDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveAccountDid = append(m.RemoveAccountDid, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PastSeed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PastSeed = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
