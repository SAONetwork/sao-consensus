syntax = "proto3";
package saonetwork.sao.market;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sao/market/params.proto";
import "sao/market/worker.proto";
// this line is used by starport scaffolding # 1
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/SaoNetwork/sao/x/market/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/SaoNetwork/sao/market/params";
  }

// Queries a Worker by index.
	rpc Worker(QueryGetWorkerRequest) returns (QueryGetWorkerResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/market/worker/{workername}";
	}

	// Queries a list of Worker items.
	rpc WorkerAll(QueryAllWorkerRequest) returns (QueryAllWorkerResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/market/worker";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}


message QueryGetWorkerRequest {
	  string workername = 1;

}

message QueryGetWorkerResponse {
	Worker worker = 1 [(gogoproto.nullable) = false];
}

message QueryAllWorkerRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWorkerResponse {
	repeated Worker worker = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
