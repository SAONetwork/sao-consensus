syntax = "proto3";
package saonetwork.sao.did;

import "sao/did/account_id.proto";
// this line is used by starport scaffolding # proto/tx/import
import "sao/did/binding_proof.proto";
import "sao/did/account_auth.proto";
import "sao/did/pub_key.proto";

option go_package = "github.com/SaoNetwork/sao/x/did/types";

// Msg defines the Msg service.
service Msg {
  rpc ResetStore(MsgResetStore) returns (MsgResetStoreResponse);
  rpc UpdatePaymentAddress(MsgUpdatePaymentAddress) returns (MsgUpdatePaymentAddressResponse);
  rpc Binding(MsgBinding) returns (MsgBindingResponse);
  rpc Update(MsgUpdate) returns (MsgUpdateResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgResetStore {
  string creator = 1;
}

message MsgResetStoreResponse {
}

message MsgUpdatePaymentAddress {
  string creator = 1;
  string accountId = 2;
  string did = 3;
}

message MsgUpdatePaymentAddressResponse {
}

message MsgBinding {
  string creator = 1;
  string accountId = 2;
  string rootDocId = 3;
  repeated PubKey keys = 4;
  AccountAuth accountAuth = 5;
  BindingProof proof = 6;
}

message MsgBindingResponse {
}

message MsgUpdate {
  string creator = 1;
  string did = 2;
  string newDocId = 3;
  repeated PubKey keys = 4;
  uint64 timestamp = 5;
  repeated AccountAuth updateAccountAuth = 6;
  repeated string removeAccountDid = 7;
  string pastSeed = 8;
}

message MsgUpdateResponse {
}

// this line is used by starport scaffolding # proto/tx/message
