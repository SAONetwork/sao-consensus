syntax = "proto3";
package saonetwork.sao.did;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sao/did/params.proto";
import "sao/did/did_binding_proof.proto";
import "sao/did/account_list.proto";
import "sao/did/sid_document.proto";
import "sao/did/sid_document_version.proto";
import "sao/did/past_seeds.proto";
import "sao/did/payment_address.proto";
import "sao/did/account_id.proto";
import "sao/did/did.proto";
// this line is used by starport scaffolding # 1
import "sao/did/account_auth.proto";
import "sao/did/binding_proof.proto";

option go_package = "github.com/SaoNetwork/sao/x/did/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/SaoNetwork/sao/did/params";
  }

// Queries a AccountList by index.
	rpc AccountList(QueryGetAccountListRequest) returns (QueryGetAccountListResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/account_list/{did}";
	}

	// Queries a list of AccountList items.
	rpc AccountListAll(QueryAllAccountListRequest) returns (QueryAllAccountListResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/account_list";
	}

// Queries a AccountAuth by index.
	rpc AccountAuth(QueryGetAccountAuthRequest) returns (QueryGetAccountAuthResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/account_auth/{accountDid}";
	}

	// Queries a list of AccountAuth items.
	rpc AccountAuthAll(QueryAllAccountAuthRequest) returns (QueryAllAccountAuthResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/account_auth";
	}

// Queries a list of GetAllAccountAuth items.
	rpc GetAllAccountAuths(QueryGetAllAccountAuthsRequest) returns (QueryGetAllAccountAuthsResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/get_all_account_auths/{did}";
	}

// Queries a SidDocument by index.
	rpc SidDocument(QueryGetSidDocumentRequest) returns (QueryGetSidDocumentResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/sid_document/{versionId}";
	}

	// Queries a list of SidDocument items.
	rpc SidDocumentAll(QueryAllSidDocumentRequest) returns (QueryAllSidDocumentResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/sid_document";
	}

// Queries a SidDocumentVersion by index.
	rpc SidDocumentVersion(QueryGetSidDocumentVersionRequest) returns (QueryGetSidDocumentVersionResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/sid_document_version/{docId}";
	}

	// Queries a list of SidDocumentVersion items.
	rpc SidDocumentVersionAll(QueryAllSidDocumentVersionRequest) returns (QueryAllSidDocumentVersionResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/sid_document_version";
	}

// Queries a PastSeeds by index.
	rpc PastSeeds(QueryGetPastSeedsRequest) returns (QueryGetPastSeedsResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/past_seeds/{did}";
	}

	// Queries a list of PastSeeds items.
	rpc PastSeedsAll(QueryAllPastSeedsRequest) returns (QueryAllPastSeedsResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/past_seeds";
	}

// Queries a PaymentAddress by index.
	rpc PaymentAddress(QueryGetPaymentAddressRequest) returns (QueryGetPaymentAddressResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/payment_address/{did}";
	}

	// Queries a list of PaymentAddress items.
	rpc PaymentAddressAll(QueryAllPaymentAddressRequest) returns (QueryAllPaymentAddressResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/payment_address";
	}

// Queries a list of ValidateDid items.
	rpc ValidateDid(QueryValidateDidRequest) returns (QueryValidateDidResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/validate_did/{did}";
	}

// Queries a AccountId by index.
	rpc AccountId(QueryGetAccountIdRequest) returns (QueryGetAccountIdResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/account_id/{accountDid}";
	}

	// Queries a list of AccountId items.
	rpc AccountIdAll(QueryAllAccountIdRequest) returns (QueryAllAccountIdResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/account_id";
	}

// Queries a Did by index.
	rpc Did(QueryGetDidRequest) returns (QueryGetDidResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/did/{accountId}";
	}

	// Queries a list of Did items.
	rpc DidAll(QueryAllDidRequest) returns (QueryAllDidResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/did/did";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAccountListRequest {
	  string did = 1;

}

message QueryGetAccountListResponse {
	AccountList accountList = 1 [(gogoproto.nullable) = false];
}

message QueryAllAccountListRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountListResponse {
	repeated AccountList accountList = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAccountAuthRequest {
	  string accountDid = 1;

}

message QueryGetAccountAuthResponse {
	AccountAuth accountAuth = 1 [(gogoproto.nullable) = false];
}

message QueryAllAccountAuthRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountAuthResponse {
	repeated AccountAuth accountAuth = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAllAccountAuthsRequest {
  string did = 1;
}

message QueryGetAllAccountAuthsResponse {
  repeated AccountAuth accountAuths = 1;
}

message QueryGetSidDocumentRequest {
	  string versionId = 1;

}

message QueryGetSidDocumentResponse {
	SidDocument sidDocument = 1 [(gogoproto.nullable) = false];
}

message QueryAllSidDocumentRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSidDocumentResponse {
	repeated SidDocument sidDocument = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSidDocumentVersionRequest {
	  string docId = 1;

}

message QueryGetSidDocumentVersionResponse {
	SidDocumentVersion sidDocumentVersion = 1 [(gogoproto.nullable) = false];
}

message QueryAllSidDocumentVersionRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSidDocumentVersionResponse {
	repeated SidDocumentVersion sidDocumentVersion = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPastSeedsRequest {
	  string did = 1;

}

message QueryGetPastSeedsResponse {
	PastSeeds pastSeeds = 1 [(gogoproto.nullable) = false];
}

message QueryAllPastSeedsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPastSeedsResponse {
	repeated PastSeeds pastSeeds = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPaymentAddressRequest {
	  string did = 1;

}

message QueryGetPaymentAddressResponse {
	PaymentAddress paymentAddress = 1 [(gogoproto.nullable) = false];
}

message QueryAllPaymentAddressRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPaymentAddressResponse {
	repeated PaymentAddress paymentAddress = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryValidateDidRequest {
  string did = 1;
}

message QueryValidateDidResponse {
}

message QueryGetAccountIdRequest {
	  string accountDid = 1;

}

message QueryGetAccountIdResponse {
	AccountId accountId = 1 [(gogoproto.nullable) = false];
}

message QueryAllAccountIdRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountIdResponse {
	repeated AccountId accountId = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDidRequest {
	  string accountId = 1;

}

message QueryGetDidResponse {
	Did did = 1 [(gogoproto.nullable) = false];
}

message QueryAllDidRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDidResponse {
	repeated Did did = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
