syntax = "proto3";
package saonetwork.sao.order;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sao/order/params.proto";
import "sao/order/order.proto";
import "sao/order/shard.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/SaoNetwork/sao/x/order/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/SaoNetwork/sao/order/params";
  }

  // Queries a Order by id.
	rpc Order(QueryGetOrderRequest) returns (QueryGetOrderResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/order/order/{id}";
	}

	// Queries a list of Order items.
	rpc OrderAll(QueryAllOrderRequest) returns (QueryAllOrderResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/order/order";
	}

// Queries a Shard by id.
	rpc Shard(QueryGetShardRequest) returns (QueryGetShardResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/order/shard/{id}";
	}

	// Queries a list of Shard items.
	rpc ShardAll(QueryAllShardRequest) returns (QueryAllShardResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/order/shard";
	}

  // Queries a list of ShardListBySp items.
	rpc ShardListBySp(QueryShardListBySpRequest) returns (QueryShardListBySpResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/order/shard_list_by_sp/{sp}/{shardId}";
	}

// Queries a list of OrdersStatus items.
	rpc OrdersStatus(QueryOrdersStatusRequest) returns (QueryOrdersStatusResponse) {
		option (google.api.http).get = "/SaoNetwork/sao/order/orders_status/{orderIds}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetOrderRequest {
	uint64 id = 1;
}

message QueryGetOrderResponse {
	FullOrder Order = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrderRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
	string did = 2;	
	repeated int32 states = 3;
}

message QueryAllOrderResponse {
	repeated Order Order = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetShardRequest {
	uint64 id = 1;
}

message QueryGetShardResponse {
	Shard Shard = 1 [(gogoproto.nullable) = false];
}

message QueryAllShardRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllShardResponse {
	repeated Shard Shard = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryShardListBySpRequest {
  string sp = 1;
  uint64 shardId = 2;
}

message QueryShardListBySpResponse {
  repeated Shard shard = 1 [(gogoproto.nullable) = false];
	uint64 nextShardId = 2;
}

message QueryOrdersStatusRequest {
  repeated uint64 orderIds = 1;
}

message QueryOrdersStatusResponse {
  repeated int32 orderStatus = 1;
}

// this line is used by starport scaffolding # 3
